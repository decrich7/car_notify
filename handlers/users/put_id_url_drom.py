from aiogram.types import ReplyKeyboardRemove

from get_last_id_drom import get_id
from keyboards.default import beak_seleck_categori, home
from loader import dp, db
from aiogram import types

from aiogram.dispatcher import FSMContext
from states.state_car import State_celect


@dp.message_handler(state=State_celect.select_category)
async def price_min_model(message: types.Message, state: FSMContext):
    url_drom = str(message.text)
    if 'https://auto.drom.ru/' in url_drom:
        try:
            await db.update_last_id_drom(get_id(url_drom), message.from_user.id)
            await state.finish()
            await db.update_last_id_drom(get_id(url_drom), message.from_user.id)
            await db.update_url_avito(url_drom, message.from_user.id)
            await message.answer(
                '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞üôÉ\n'
                '–ü—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –º—ã –≤–∞—Å –æ–ø–æ–≤–µ—Å—Ç–∏–ºü§ì', reply_markup=home)
        except:
            await message.reply('–î–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç üôÅ \n'
                                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—Ç–µ –µ–µ, –∏ –ø—Ä–µ—à–ª–∏—Ç–µ –≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É üòä')

    elif url_drom == '–Ø –ø–µ—Ä–µ–¥—É–º–∞–ª –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—éü§î':
        await state.finish()
        await message.answer('–û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n', reply_markup=home)
    else:
        await message.reply(
            '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –¥–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Å—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å —Ä–∞–∑–¥–µ–ª–∞ "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏" –Ω–∞ drom.ru',
            reply_markup=beak_seleck_categori)
